
<div class="appQuestion"><b>1. What is the difference between JDK and JRE?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
JDK stands for Java Development Kit. It contains the tools andlibraries for development of Java programs. It also contains compilers and debuggers 
needed to compile Java program, JRE stands for Java Runtime Environment. This is included in JDK. JRE provides libraries and JVM that is required to 
run a Javaprogram.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>2. What is Java Virtual Machine (JVM)?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
Java Virtual Machine (JVM) is an abstract machine that executes Java Bytecode. There are different JVM for different hardware and software platforms. 
So JVM is platform dependent. JVM is responsible for loading, verifying and executing the Bytecode on a platform.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>3. What are the different types of memory areas allocated by JVM?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
In java, JVM allocates memory to different processes, methods and objects.<br/><br/> 
Some of the memory areas allocated by JVM are:
<ol>
<li><b>ClassLoader :</b> It is a component of JVM used to load classfiles.</li>
<li><b>Class (Method) Area :</b> It stores per-class structures such as the runtime constant pool, field and method data, and the code for methods.</li>
<li><b>Heap :</b> Heap is created a runtime and it contains the runtime data area in which objects are allocated.</li>
<li><b>Stack :</b> Stack stores local variables and partial results at runtime. It also helps in method invocation and return value. 
Each thread creates a private JVM stack at the time of thread creation.</li>
<li><b>Program Counter Register :</b> This memory area contains the address of the Java virtual machine instruction that is currently being executed.</li>
<li><b>Native Method Stack :</b> This area is reserved for all the native methods used in the application.</li>
</ol>
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>4. What is JIT compiler?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
Just In Time compiler also known as JIT compiler is used for performance improvement in Java. It is enabled by default.<br/> 
It is compilation done at execution time rather earlier. Java has popularized the use of JIT compiler by including it in JVM.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>5. How Java platform is different from other platforms?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
Java is a platform independent language. Java compiler converts Java code in to byte code that can be interpreted by JVM. There are JVM written for 
almost all the popular platforms in the world.<br/><br/> Java byte code can run on any supported platform in same way. Where as other languages require libraries 
compiled for a specific platform to run.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>6. Why people say that Java is 'write once and run anywhere' language?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
You can write Java code on Windows and compile it in Windows platform. The class and jar files that you get from Windows platform can run as it is on Unix 
environment. So it is a truly platform independent language.<br/><br/> Behind all this portability is Java byte code. Byte code generated byJava compiler 
can be interpreted by any JVM. So it becomes much easier to write programs in Java and expect those to run on any platform. <br/><br/> Java compiler 
javac compiles java code and JVM java runs that code.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>7. How does ClassLoader work in Java?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
In Java, ClassLoader is a class that is used to load files in JVM. ClassLoader loads files from their physical file locations e.g.Filesystem, Network 
location etc. There are three main types of ClassLoaders in Java :
<ol>
<li><b>Bootstrap ClassLoader :</b> This is the first ClassLoader. It loads classes from rt.jar file.</li>
<li><b>Extension ClassLoader :</b> It loads class files from <code><b>jre/lib/ext</b></code> location.</li>
<li><b>Application ClassLoader :</b> This ClassLoader depends on CLASSPATH to find the location of class files. If you specify your jars in CLASSPATH, 
then this ClassLoader will load them.</li>
<ol>
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>8. Do you think ‘main’ used for main method is a keyword in Java?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
No, main is just a name of method. There can be multiple methods with same name main in a class file. It is not a keyword in Java.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>9. Can we write main method as public void static instead of public static void?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
No, you cannot write it like this.<br/><br/> Any method has to first specify themodifiers and then the return value. 
The order of modifiers can change. We can write <code><b>static public void main()</b></code> instead of <code><b>public static void main()</b></code>.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>10. In Java, if we do not specify any value for local variables, then what will be the default value of the local variables?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
Java does not initialize local variables with any default value. So these variables will be just null by default.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>11. Let say, we run a java class without passing any arguments. What will be the value of String array of arguments in Main method?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
By default, the value of String array of arguments is empty in Java.It is not null.
<!-- Answer ::: END -->
</div>
</div>

<div class="appQuestion"><b>12. What is the difference between byte and char data types in Java?</b></div>
<div class="list-group">
<div class="list-group-item appAnswer">
<!-- Answer ::: START -->
Both byte and char are numeric data types in Java. They are used to represent numbers in a specific range.<br/><br/>
Major difference between them is that a byte can store raw binary data where as a char stores characters or text data.<br/><br/>
Usage of char is E.g. char ch = ‘x’;<br/><br/>
Byte values range from -128 to 127.<br/><br/>
A byte is made of 8 bits. But a char is made of 16 bits. So it is equivalent to 2 bytes.
<!-- Answer ::: END -->
</div>
</div>