
<div><b>1. What is a Servlet?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
The <code><b>Servlet</b></code> is a Java programming language class used to process client requests and generate dynamic web content. Servlets are 
mostly used to process or store data submitted by an HTML form, provide dynamic content and manage state information that 
does not exist in the stateless HTTP protocol.
<!-- Answer ::: END -->
</div>
</div>

<div><b>2. Explain the architechure of a Servlet.</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
The core abstraction that must be implemented by all servlets is the javax.servlet.Servlet interface. Each servlet must implement 
it either directly or indirectly, either by extending javax.servlet.GenericServlet or javax.servlet.http.HTTPServlet. Finally, each 
servlet is able to serve multiple requests in parallel using multithreading.
<!-- Answer ::: END -->
</div>
</div>

<div><b>3. What is the difference between an Applet and a Servlet?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
An Applet is a client side java program that runs within a Web browser on the client machine. On the other hand, a servlet is a 
server side component that runs on the web server.An applet can use the user interface classes, while a servlet does not have a 
user interface. Instead, a servlet waits for client’s HTTP requests and generates a response in every request.
<!-- Answer ::: END -->
</div>
</div>

<div><b>4. What is the difference between GenericServlet and HttpServlet ?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
GenericServlet is a generalized and protocol-independent servlet that implements the Servlet and ServletConfig interfaces. Those 
servlets extending the GenericServlet class shall override the service method. Finally, in order to develop an HTTP servlet for 
use on the Web that serves requests using the HTTP protocol, your servlet must extend the HttpServlet instead.
<!-- Answer ::: END -->
</div>
</div>

<div><b>5. Explain the life cycle of a Servlet.</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
On every client’s request, the Servlet Engine loads the servlets and invokes its init methods, in order for the servlet to be 
initialized. Then, the Servlet object handles all subsequent requests coming from that client, by invoking the service method for 
each request separately. Finally, the servlet is removed by calling the server’s destroy method.
<!-- Answer ::: END -->
</div>
</div>

<div><b>6. What is the difference between doGet() and doPost()?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<b>doGET():</b><br/><br/> The <code><b>GET</b></code> method appends the name-value pairs on the request’s URL. Thus, there is a limit on the number of 
characters and subsequently on the number of values that can be used in a client’s request. Furthermore, the values of the request are made 
visible and thus, sensitive information must not be passed in that way.
<b>doPOST():</b><br/><br/> The <code><b>POST</b></code> method overcomes the limit imposed by the GET request, by sending the values of the request 
inside its body. Also, there is no limitations on the number of values to be sent across. Finally, the sensitive information passed through a 
POST request is not visible to an external client.
<!-- Answer ::: END -->
</div>
</div>

<div><b>7. What is meant by a Web Application?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
A Web application is a dynamic extension of a Web or application server. There are two types of web applications: presentation oriented 
and service-oriented. A presentation-oriented Web application generates interactive web pages, which contain various 
types of markup language and dynamic content in response to requests. On the other hand, a service-oriented web application 
implements the endpoint of a web service. In general, a Web application can be seen as a collection of servlets installed under a 
specific subset of the server’s URL namespace.
<!-- Answer ::: END -->
</div>
</div>

<div><b>8. What is a Server Side Include (SSI)?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
Server Side Includes (SSI) is a simple interpreted server-side scripting language, used almost exclusively for the Web, and is 
embedded with a servlet tag. The most frequent use of SSI is to include the contents of one or more files into a Web page on a 
Web server. When a Web page is accessed by a browser, the Web server replaces the servlet tag in that Web page with the hyper 
text generated by the corresponding servlet.
<!-- Answer ::: END -->
</div>
</div>

<div><b>9. What is Servlet Chaining?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
Servlet Chaining is the method where the output of one servlet is sent to a second servlet. The output of the second servlet can 
be sent to a third servlet, and so on. The last servlet in the chain is responsible for sending the response to the client.
<!-- Answer ::: END -->
</div>
</div>

<div><b>10.How do you find out what client machine is making a request to your servlet?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
The ServletRequest class has functions for finding out the IP address or host name of the client machine. <code><b>getRemoteAddr()</b></code> gets 
the IP address of the client machine and <code><b>getRemoteHost()</b></code> gets the host name of the client machine.
<!-- Answer ::: END -->
</div>
</div>

<div><b>11. What is the structure of the HTTP response?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
The HTTP response consists of three parts:
<ul>
<li><b>Status Code:</b><br/><br/> describes the status of the response. It can be used to check if the request has been successfully completed. In 
case the request failed, the status code can be used to find out the reason behind the failure. If your servlet does not return a 
status code, the success status code, <code><b>HttpServletResponse.SC_OK</b></code>, is returned by default.</li>
<li><b>HTTP Headers:</b><br/><br/> they contain more information about the response. For example, the headers may specify the date/time after 
which the response is considered stale, or the form of encoding used to safely transfer the entity to the user.</li>
<li>Body: it contains the content of the response. The body may contain HTML code, an image, etc. The body consists of the data 
bytes transmitted in an HTTP transaction message immediately following the headers.</li>
</ul>
<!-- Answer ::: END -->
</div>
</div>

<div><b>12. What is a cookie ? What is the difference between session and cookie?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
A cookie is a bit of information that the Web server sends to the browser. The browser stores the cookies for each Web server 
in a local file. In a future request, the browser, along with the request, sends all stored cookies for that specific Web server.The 
differences between session and a cookie are the following:
<ul>
<li>The session should work, regardless of the settings on the client browser. The client may have chosen to disable cookies.
However, the sessions still work, as the client has no ability to disable them in the server side.</li>
<li>The session and cookies also differ in the amount of information the can store. The HTTP session is capable of storing any 
Java object, while a cookie can only store String objects.</li>
</ul>
<!-- Answer ::: END -->
</div>
</div>

<div><b>13. Which protocol will be used by browser and servlet to communicate?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
The browser communicates with a servlet by using the HTTP protocol.
<!-- Answer ::: END -->
</div>
</div>

<div><b>14. What is HTTP Tunneling?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
HTTP Tunneling is a technique by which, communications performed using various network protocols are encapsulated using 
the HTTP or HTTPS protocols. The HTTP protocol therefore acts as a wrapper for a channel that the network protocol being 
tunneled uses to communicate. The masking of other protocol requests as HTTP requests is HTTP Tunneling.
<!-- Answer ::: END -->
</div>
</div>


<div><b>15. What’s the difference between sendRedirect and forward methods?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
The sendRedirect method creates a new request, while the forward method just forwards a request to a new target. The previous 
request scope objects are not available after a redirect, because it results in a new request. On the other hand, the previous request 
scope objects are available after forwarding. FInally, in general, the sendRedirect method is considered to be slower compare to 
the forward method.
<!-- Answer ::: END -->
</div>
</div>


<div><b>16. What is URL Encoding and URL Decoding?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
The URL encoding procedure is responsible for replacing all the spaces and every other extra special character of a URL, into 
their corresponding Hex representation. In correspondence, URL decoding is the exact opposite procedure.
<!-- Answer ::: END -->
</div>
</div>


<div><b>17. What is a JSP Page?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
A Java Server Page (JSP) is a text document that contains two types of text: static data and JSP elements. Static data can be 
expressed in any text-based format, such as HTML or XML. JSP is a technology that mixes static content with dynamically generated 
content.
<!-- Answer ::: END -->
</div>
</div>


<div><b>18. How are the JSP requests handled?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
On the arrival of a JSP request, the browser first requests a page with a .jsp extension. Then, theWeb server reads the request and 
using the JSP compiler, the Web server converts the JSP page into a servlet class. Notice that the JSP file is compiled only on 
the first request of the page, or if the JSP file has changed.The generated servlet class is invoked, in order to handle the browser’s 
request. Once the execution of the request is over, the servlet sends a response back to the client.
<!-- Answer ::: END -->
</div>
</div>

<div><b>19. What are the advantages of JSP?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
The advantages of using the JSP technology are:
<ul>
<li>JSP pages are dynamically compiled into servlets and thus, the developers can easily make updates to presentation code.</li>
<li>JSP pages can be pre-compiled.</li>
<li>JSP pages can be easily combined to static templates, including HTML or XML fragments, with code that generates dynamic content.</li>
<li>Developers can offer customized JSP tag libraries that page authors access using an XML-like syntax.</li>
<li>Developers can make logic changes at the component level, without editing the individual pages that use the application’s logic</li>
</ul>
<!-- Answer ::: END -->
</div>
</div>

<div><b>20. What are Directives? What are the different types of Directives available in JSP?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
Directives are instructions that are processed by the JSP engine, when the page is compiled to a servlet. Directives are used to 
set page-level instructions, insert data from external files, and specify custom tag libraries. Directives are defined between <code><b>&lt; %@</b></code>
and <code><b>% &gt;</b></code>. The different types of directives are:
<ul>
<li><b>Include directive:</b> it is used to include a file and merges the content of the file with the current page.</li>
<li><b>Page directive:</b> it is used to define specific attributes in the JSP page, like error page and buffer.</li>
<li><b>Taglib:</b> it is used to declare a custom tag library which is used in the page.</li>
</ul>
<!-- Answer ::: END -->
</div>
</div>

<div><b>21. What are JSP actions?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
JSP actions use constructs in XML syntax to control the behavior of the servlet engine. JSP actions are executed when a JSP 
page is requested. They can be dynamically inserted into a file, re-use JavaBeans components, forward the user to another page, 
or generate HTML for the Java plugin.Some of the available actions are:
<ul>
<li><code><b>jsp:include -</b></code> includes a file, when the JSP page is requested.</li>
<li><code><b>jsp:useBean -</b></code> finds or instantiates a JavaBean.</li>
<li><code><b>jsp:setProperty -</b></code> sets the property of a JavaBean.</li>
<li><code><b>jsp:getProperty -</b></code> gets the property of a JavaBean.</li>
<li><code><b>jsp:forward -</b></code> forwards the requester to a new page.</li>
<li><code><b>jsp:plugin -</b></code> generates browser-specific code.</li>
</ul>
<!-- Answer ::: END -->
</div>
</div>

<div><b>22. What are Scriptlets?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
In Java Server Pages (JSP) technology, a scriptlet is a piece of Java-code embedded in a JSP page. The scriptlet is everything 
inside the tags. Between these tags, a user can add any valid scriplet.
<!-- Answer ::: END -->
</div>
</div>

<div><b>23. What are Declarations?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
Declarations are similar to variable declarations in Java. Declarations are used to declare variables for subsequent use in expressions 
or scriptlets. To add a declaration, you must use the sequences to enclose your declarations.
<!-- Answer ::: END -->
</div>
</div>

<div><b>24. What are Expressions?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
A JSP expression is used to insert the value of a scripting language expression, converted into a string, into the data stream 
returned to the client, by the web server. Expressions are defined between <code><b>&lt;%=</b></code> and <code><b>%&gt;</b></code> tags.
<!-- Answer ::: END -->
</div>
</div>

<div><b>25. What is meant by implicit objects and what are they?</b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
JSP implicit objects are those Java objects that the JSP Container makes available to developers in each page. A developer can 
call them directly, without being explicitly declared. JSP Implicit Objects are also called pre-defined variables.The following 
objects are considered implicit in a JSP page:
<ul>
<li>application</li>
<li>page</li>
<li>request</li>
<li>response</li>
<li>session</li>
<li>exception</li>
<li>out</li>
<li>config</li>
<li>pageContext</li>
</ul>
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>

<div><b></b></div>
<div class="list-group">
<div class="list-group-item">
<!-- Answer ::: START -->
<!-- Answer ::: END -->
</div>
</div>